version: '3'
services:

  # Dev Tools
  postgres:
    image: postgres
    ports:
      - "15432:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      POSTGRES_USER: pgadmin
      POSTGRES_PASSWORD: pgadmin

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.0
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8282:8282"
    command: [
      "start",
      "--auto-build",
      "--db postgres",
      "--proxy edge",
      "--http-enabled true",
      "--hostname-strict false",
      "--hostname-strict-https false",
    ]
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
    environment:
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: pgadmin
      KC_DB_PASSWORD: pgadmin
      KC_DB_SCHEMA: public
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "29092:29092"
    healthcheck:
      test: kafka-topics --bootstrap-server broker:29092 --list
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  opensearch:
    image: opensearchproject/opensearch:latest
    ports:
      - "9200:9200"
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl",
        "-ku",
        "admin:admin",
        "https://localhost:9200/_cluster/health?pretty",
        "| grep status",
        "| grep -q '\\(green\\|yellow\\)'"
      ]
      interval: 30s
      timeout: 10s
      retries: 24
    environment:
      - discovery.type=single-node
      - http.port=9200
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=adm-Password0
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data

  # Dev Tools UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9090:9090"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry0:8085
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083
      KAFKA_CLUSTERS_1_NAME: secondLocal
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka1:29092
      KAFKA_CLUSTERS_1_METRICS_PORT: 9998
      KAFKA_CLUSTERS_1_SCHEMAREGISTRY: http://schemaregistry1:8085
      DYNAMIC_CONFIG_ENABLED: 'true'

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    depends_on:
      opensearch:
        condition: service_healthy
    ports:
      - "5601:5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
